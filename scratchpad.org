#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t reveal_title_slide:nil
#+REVEAL_THEME: solarized
#+REVEAL_ROOT: ./reveal.js-3.8.0


* Dwarlixir

** Brief intro
- did NOΤ understand how to think in Erlang/Elixir
- all about mistakes
** What's a MUD

** Erlmud
https://gitlab.com/zxq9/erlmud/
** What's Dwarf Fortress
** game of life-style
*** | c9f6725 | Dwarves have X, Y coordinates and have a Registry (this is pre-Registry)
** decentralized / many ticks
*** | 48fc61e | Dwarves use :timer.send_interval to send themselves a ping and move to new coordinates
** a world map
*** | 576e3f4 | Create a "world" that knows if a location is taken by a dwarf
*** | 0d2b2ed | Faker, because names are important
*** | 7b67cff | use built-in Registry finally
- got a world
- when spinning up a dwarf, ask the world process to store its location
- moving a dwarf is ~World.move(dwarf)~
** pausing the game
*** | 80e2ba8 | pause the game!
- more registries can't hurt, right?
- The time registry now has a heartbeat which Ι could stop -- it sends every creature a message telling it to do its thing.
- I have timers! They hold heartbeats! They can be stopped! Wait, that sounds murderous.
** ets sounds cool
*** | 0a823a6 | Use ets for locations (because that's cool, right?)
- oh god what's with those matchspecs
- ex2ms? oh good Ι don't have to figure too much out
** dwarves can die
*** | ad91c0c | dwarves can die
** deadlock! uncontrolled synchronous calls
*** | f447f85 | nyaaargg
Looking for mates of the other sex through "world neighbors", synchronous calls to dwarves
DEADLOCKS!
** Read erlmud
*** | 11e90b6 | the baby version of locations and pathways
Okay Ι get it, async is better
*** | 317c908 | location spawns pathways
*** | 69a2079 | Registries everywhere! aaarrghh
Well, LocationRegistry and PathwayRegistry
** Back to "the game works?"
*** | 12ad608 | Tick works, moving works
Dwarves get a tick sent to them and they do stuff
... I also introduce an API in World.Location
*** | ec5d258 | very rudimentary controller implemented
Beginning of separation of business logic from, er ... framework logic?
*** | deb19d0 | Create a generic mob controller
Oh, a "human" controller with output and a mob controller with "AI"
** Okay, back to reproduction
*** | 995202a | Preparing for mating
only 10% chance to flirt, should help, right?
Right?
Helloooo ?
*** | aeff220 | They breed like rabbits
... the introduction of "pregnantize" because English is hard
** "Death" - the reaper process
*** | 6222d17 | dwarves really die now
** Use a single tick through a registry to send a tick to everyone
*** | 90343d4 | god tick, I guess
** human controller receives messages
*** | 9bb4c6b | some message passing is happening...
*** | 3995153 | well there's messages
Location.depart and Location.arrive
** First test - end-to-end through telnet
*** | f98a561 | integration test for telnet?
**  distributed code and synchronized state is HARD
*** | a9dedc1 | locs and mobs get out of sync :(
Hrm.. What am I doing here, what's broken?
*** | 1911f7f | extract currently common mob functionality
Severe misunderstanding of the problem doesn't help
*** | 7d0c748 | I see when mobs leave and arrive
+      # Okay, locs and mobs get out of sync at some point.
+      # I could try to troubleshoot it
+      # Or I could just kill the fucking things
+      # Death to smoochie it is
+      Kernel.apply(module, :stop, [mob_id])
+      World.purge({module, mob_id}, mob_public_info, [state.id])
*** | 5e7afcd | Randomly generated graph and World.overview admin command
Borrow logic from Land of Lisp for world generation
*** going far with that local state thing: giving all processes the current exits
**** | 4511e92 | human movement works
**** | 8fb8229 | just give the mobs the exits, too
*** | 40abfa3 | bunch of new commands
That moment I realized I'm gonna need a command parser
*** | fecd9c4 | a small tweak to algo yields perf boost
Wherein we learn that runtime complexity is a thing.
*** | e1b1c2b | arguably improved design
At least one thing here: don't put the actual pid in the registry.
And here's where we start to ask the question, what's the limit of pattern matching usability?
*** | 9479d44 | I bow to the genserver gods
start_link -> start
*** | fb6acf6 | foo
A great commit message for a utility to load info from config or environment
*** | 3a640a8 | Okay, fifteen mobs is enough thanks
Haha yeah so too many messages here, Ι think
*** | 6961c4b | Use OTP process termination when a mob dies
Trying to be clever by disconnecting events that should be connected (death and reaping)
*** | ed8e590 | 0.1.7 0.1.6 back to a mob spawning supervisor
mob-spawning supervisor!
*** | ac8e5a9 | 0.2.0 there's an ecosystem in the house
This is when Ι realized the OOM killer existed
*** | 479cc41 | 0.4.0 buncha sync stuff is time-bound now
Trying hard to make things better by allowing more failure
*** | f5d1a8f | sexual reproduction: pregnant female doesn't mate
Well it took me a while to think about /that one/.
*** | fd2b2c7 | queues messages, nothing spawns
what if a message were, like, almost a struct?
*** | a1f2926 | mob state in an agent
Obviously MORE processes are the answer?
* notes
if ca06ba5 killed the code in pathways for movement, where did I decide to make this change?
